user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            # # For developing using 'npm run dev'
            # set $cors '';
            # if ($http_origin ~* '^https?://(localhost|127.0.0.1):3001') {
            #     set $cors 'true';
            # }
            # if ($cors = 'true') {
            #     ## required to be able to read Authorization header in frontend
            #     add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            #     add_header 'Access-Control-Allow-Credentials' 'true' always;
            #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            #     ## required to be able to read Authorization header in frontend
            #     # add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            # }
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass "http://alkitab-backend:3000/api";
        }
        location /mongoadmin {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://alkitab-mongo-express:8081;
        }
        location /portainer/ {
      		proxy_http_version 1.1;
      		proxy_set_header Connection "";
      		proxy_pass http://alkitab-portainer:9000/;
        }
        location /portainer/api/websocket/ {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_pass http://alkitab-portainer:9000/api/websocket/;
        }
    }
}
